Aiden Allen CEN 4020 Te-yen Wu Educating New Software Engineers Software engineering is an ever-evolving field that demands a significant amount of self-study and a genuine passion for the subject matter. Consequently, students often find themselves inadequately prepared to transition into the workforce. Students are expected to learn emerging technologies such as MongoDB and Angular JS. Universities primarily emphasize the academic aspects and theoretical foundations of software engineering, often overlooking the practical applications of this field. To adequately equip students, universities should consider implementing interview preparation courses and placing greater importance on the development of production code. This structure enables students to understand the fundamentals of programming while allowing them a smoother transition to the job market. Additionally, a greater emphasis on the interview process needs to be established by institutions to ensure students' success. Internships are critical to the success of Computer Science students, allowing for simulation of the job process, because of this it is critical to promote a balanced curriculum that mixes theoretical knowledge with practical abilities to prepare students for the evolving terrain of software engineering. Many proponents of the current structure of the computer science degree argue that it aims to provide a fundamental basis for its applications, such as Software engineering. Arguing that understanding the theory, as well as the lowest level application, is critical to understanding the practical applications of programming. At Florida State University, languages such as Python are taught following a concrete foundation within C, C++, as well as assembly (FSU 2023). Python consists of high levels of abstraction, seemingly working like magic compared to predecessors such as C (Frampton 2009). Developing an understanding of lower-level languages allows for the layers of abstraction to be removed, providing a better understanding of the inner workings of the languages. By learning the fundamentals of programming other frameworks become easier to understand. Learning new technologies is difficult, even for experienced programmers. After utilizing one language consistently other languages tend to become muddied, especially when syntax is vastly different. One study in 2022, found that experienced programmers tend to maintain their old habits within a new language. When observing a programmer transitioning from R to Python they found that “They are unable to successfully relate their previous knowledge about subsetting, in R, to Python” (Shrestha 2022). To properly prepare for the job process, universities should be instructing students on relevant frameworks and materials to avoid this confusion between languages. Courses need to be constructed centered around emerging technologies so that students may establish a concrete foundation within their self-study. Learning emerging languages may be difficult with the variety of different methods of programming, by teaching these technologies within institutions a concrete standard will be set for students. This allows students to further their concrete foundation while maintaining a common standard for the technologies. To properly prepare students, universities should prioritize learning emerging technologies such as MongoDB. Learning the fundamentals of computer science is important, however, they leave a steep learning curve for students while entering the job market. Consequently, computer science internships are rarely granted to students, with one study reporting less than 60 percent of Computer Science students pursue internships before graduation (Kapoor 2020). Internships are often pivotal to learning emerging technologies. Internships prepare students for the creation of production code through rigorous training. However, due to the shortage of students achieving internships, students are left without any formal experience when entering the job market. Internships provide a training course fo